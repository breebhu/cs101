#include <iostream>
#include <fstream>
#include <cv.h>
#include <opencv2/imgproc/imgproc.hpp>
#include <opencv2/highgui/highgui.hpp>
using namespace std;

cv::Mat normalisedmat (int row,int col,int cond)
{ cv::Mat S;
switch (cond)

{
case 0 : S=cv::Mat(row,col,CV_64F);
         for (int i=0 ;i<row;i++)
      {
              for(int j=0;j<col;j++)
           {
              S.at<float>(i,j)=1.0/i;
            }
      }break;

case 1 :  S=cv::Mat(row,col,CV_64F);
         for (int i=0 ;i<row;i++)
      {
              for(int j=0;j<col;j++)
           {
              S.at<float>(i,j)=1.0/j;
            }
      }break;
}
	return S;
}
 


int main(int argc,char**argv)
{
	//Step 1:Load features file
	fstream fin;
	fin.open("features.csv",ios::in);
	if(!fin)
	{
		cout << "Dieeee!" << endl;
		return -1;
	}
	char c;
	while(fin.get(c))
	{
		cout << c;
	}
	cv::waitKey(0);
	//Step 2:Train HMM
		//Step 2.1:Write a HMM class for ease
	return 0;
}
